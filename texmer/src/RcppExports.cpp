// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// get_segments_cpp
Rcpp::List get_segments_cpp(const Rcpp::List& rtokens, const Rcpp::StringVector& rstopwords, std::size_t sentence_size, std::size_t block_size, const Rcpp::CharacterVector& method, bool liberal);
RcppExport SEXP _texmer_get_segments_cpp(SEXP rtokensSEXP, SEXP rstopwordsSEXP, SEXP sentence_sizeSEXP, SEXP block_sizeSEXP, SEXP methodSEXP, SEXP liberalSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::List& >::type rtokens(rtokensSEXP);
    Rcpp::traits::input_parameter< const Rcpp::StringVector& >::type rstopwords(rstopwordsSEXP);
    Rcpp::traits::input_parameter< std::size_t >::type sentence_size(sentence_sizeSEXP);
    Rcpp::traits::input_parameter< std::size_t >::type block_size(block_sizeSEXP);
    Rcpp::traits::input_parameter< const Rcpp::CharacterVector& >::type method(methodSEXP);
    Rcpp::traits::input_parameter< bool >::type liberal(liberalSEXP);
    rcpp_result_gen = Rcpp::wrap(get_segments_cpp(rtokens, rstopwords, sentence_size, block_size, method, liberal));
    return rcpp_result_gen;
END_RCPP
}
// generate_token_segment_ids_cpp
Rcpp::IntegerVector generate_token_segment_ids_cpp(const Rcpp::IntegerVector& ntoken_per_doc, const Rcpp::IntegerVector& nseg_per_doc, const Rcpp::IntegerVector& segsize_per_doc);
RcppExport SEXP _texmer_generate_token_segment_ids_cpp(SEXP ntoken_per_docSEXP, SEXP nseg_per_docSEXP, SEXP segsize_per_docSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::IntegerVector& >::type ntoken_per_doc(ntoken_per_docSEXP);
    Rcpp::traits::input_parameter< const Rcpp::IntegerVector& >::type nseg_per_doc(nseg_per_docSEXP);
    Rcpp::traits::input_parameter< const Rcpp::IntegerVector& >::type segsize_per_doc(segsize_per_docSEXP);
    rcpp_result_gen = Rcpp::wrap(generate_token_segment_ids_cpp(ntoken_per_doc, nseg_per_doc, segsize_per_doc));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_texmer_get_segments_cpp", (DL_FUNC) &_texmer_get_segments_cpp, 6},
    {"_texmer_generate_token_segment_ids_cpp", (DL_FUNC) &_texmer_generate_token_segment_ids_cpp, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_texmer(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
